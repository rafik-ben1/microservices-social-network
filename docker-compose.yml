services:
  postgresdb:
    image: postgres:latest
    container_name: postsdb
    ports:
      - 5432:5432
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=posts
    
  mysqldb:
    image: mysql
    container_name: friendsdb
    ports:
      - 3306:3306
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=friends_db
      - MYSQL_USER=rafik
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_PASSWORD=password
    
  mongodb:
    image: mongo:7.0.5
    container_name: chatsdb
    ports:
      - 27017:27017
    restart: unless-stopped
    environment:
       MONGO_INITDB_ROOT_USERNAME: admin
       MONGO_INITDB_ROOT_PASSWORD: password
       MONGO_INITDB0_DATABASE: chats_db
   
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - app-network
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - app-network
  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    
  localhost:
    image: alpine:latest
    command: sleep infinity
    ports:
      - 8080:8080
      - 8222:8222
  keycloakdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    network_mode: "service:localhost"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - "start-dev"
      - "--import-realm"
    restart: unless-stopped
    depends_on:
      - keycloakdb
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm.json:ro

  config-server:
    container_name: config-server
    restart: unless-stopped
    environment:
      DISCOVERY_HOST: eureka-server
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 20s
      retries: 15
      start_period: 5s
    build:
      context: ./config-server
    ports:
      - 8888:8888
  eureka-server:
    container_name: eureka-server
    restart: unless-stopped
    depends_on:
      config-server:
        condition: service_healthy     
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 20s
      retries: 20
      start_period: 25s
    environment:
      CONFIG_HOST: config-server
    build:
      context: ./eureka
    ports:
      - 8761:8761
  gateway:
    container_name: gateway
    restart: unless-stopped
    environment:
      CONFIG_HOST: config-server
      DISCOVERY_HOST: eureka-server
    build:
      context: ./api-gateway
    network_mode: "service:localhost"
    depends_on:
      eureka-server:
        condition: service_healthy
  user-service:
    container_name: user-service
    restart: unless-stopped
    environment:
      CONFIG_HOST: config-server
      DISCOVERY_HOST: eureka-server
    build:
      context: ./user-service
    ports:
      - 8030:8030
    depends_on:
      - gateway
      - keycloak
  post-service:
    container_name: post-service
    restart: unless-stopped
    environment:
      CONFIG_HOST: config-server
      DISCOVERY_HOST: eureka-server
    build:
      context: ./post-service
    ports:
      - 8040:8040
    depends_on:
      - gateway
      - postgresdb
      - kafka
  friends-service:
    container_name: friends-service
    restart: unless-stopped
    environment:
      CONFIG_HOST: config-server
      DISCOVERY_HOST: eureka-server
    build:
      context: ./friends-service
    ports:
      - 8050:8050
    depends_on:
      - mysqldb
      - kafka
      - gateway
  chat-service:
    container_name: chat-service
    restart: unless-stopped
    environment:
      CONFIG_HOST: config-server
      DISCOVERY_HOST: eureka-server
    build:
      context: ./chat-service
    ports:
      - 8060:8060
    depends_on:
      - mongodb
      - gateway
    networks:
      - app-network
  notification-service:
    container_name: notification-service
    restart: unless_stopped
    environment:
      CONFIG_HOST: config-server
      DISCOVERY_HOST: eureka-server
    build:
      context: ./notification-service
    ports:
      - 8010:8010
    depends_on:
      - kafka
      - mail-dev
      - gateway

